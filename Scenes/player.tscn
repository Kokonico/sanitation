[gd_scene load_steps=4 format=3 uid="uid://bnbexd7lsiij2"]

[ext_resource type="Texture2D" uid="uid://du0lenqpft2yx" path="res://icon.svg" id="1_aptos"]

[sub_resource type="GDScript" id="GDScript_k3vlu"]
script/source = "extends CharacterBody2D
@onready var collision_shape_2d: CollisionShape2D = $physicsbox


const SPEED = 1000.0
const SPEED_CAP = 1000.0
const FRACTION_FORCE = 100
var directions = []
var direction = Vector2.ZERO
var sliding = false
var has_y_input = false
var has_x_input = false

var last_direction = Vector2.ZERO

func _physics_process(delta):
	var direction = Vector2.ZERO
	var has_input = false
	has_y_input = false
	has_x_input = false
	
	if abs(velocity.x) <= SPEED_CAP and abs(velocity.y) <= SPEED_CAP:
		sliding = false
	
	if Input.is_action_pressed(\"move-up\"):
		direction.y -= 1
		has_input = true
		has_y_input = true
	if Input.is_action_pressed(\"move-down\"):
		direction.y += 1
		has_input = true
		has_y_input = true
	if Input.is_action_pressed(\"move-left\"):
		direction.x -= 1
		has_input = true
		has_x_input = true
	if Input.is_action_pressed(\"move-right\"):
		direction.x += 1
		has_input = true
		has_x_input = true
	
	if direction != Vector2.ZERO:
		last_direction = direction
	
	direction = direction.normalized()
	self.rotation = direction.angle()
	if not sliding:
		velocity += direction * SPEED
		if abs(velocity.x) > SPEED_CAP:
			velocity.x = SPEED_CAP * (1 if abs(velocity.x) == velocity.x else -1)
		if abs(velocity.y) > SPEED_CAP:
			velocity.y = SPEED_CAP * (1 if abs(velocity.y) == velocity.y else -1)
	
	if not has_x_input or sliding:
		var velx_abs = abs(velocity.x)
		var velx_dir = 1 if velx_abs == velocity.x else -1
		velocity.x = ((velx_abs - FRACTION_FORCE) if (velx_abs - FRACTION_FORCE) > 0 else 0) * velx_dir
	if not has_y_input or sliding:
		var vely_abs = abs(velocity.y)
		var vely_dir = 1 if vely_abs == velocity.y else -1
		velocity.y = ((vely_abs - FRACTION_FORCE) if (vely_abs - FRACTION_FORCE) > 0 else 0) * vely_dir
	
	if Input.is_action_just_pressed(\"dash\") and not sliding:
		sliding = true
		if direction == Vector2.ZERO:
			direction = last_direction
		velocity = direction * 2500
	move_and_slide()
	position += velocity * delta
	self.rotation = 0
	
"

[sub_resource type="CircleShape2D" id="CircleShape2D_lp8tm"]
radius = 62.0322

[node name="Player" type="CharacterBody2D"]
script = SubResource("GDScript_k3vlu")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_aptos")

[node name="physicsbox" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_lp8tm")

[node name="Camera2D" type="Camera2D" parent="."]
position_smoothing_enabled = true
